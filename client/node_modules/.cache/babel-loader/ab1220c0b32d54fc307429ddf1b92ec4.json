{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CLEAR_BOARD, GET_BOARDS, GET_BOARD, ADD_BOARD, BOARD_ERROR, RENAME_BOARD, GET_LIST, ADD_LIST, RENAME_LIST, ARCHIVE_LIST, GET_CARD, ADD_CARD, EDIT_CARD, MOVE_CARD, ARCHIVE_CARD, DELETE_CARD, GET_ACTIVITY, ADD_MEMBER, MOVE_LIST, ADD_CARD_MEMBER, ADD_CHECKLIST_ITEM, EDIT_CHECKLIST_ITEM, COMPLETE_CHECKLIST_ITEM, DELETE_CHECKLIST_ITEM } from './types';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport const getTasks = async () => {\n  axios.get('https://help-maxbonus.ru/api/status').then(data => {\n    return data;\n  });\n};\nexport const getStatuses = async () => {\n  axios.get('https://help-maxbonus.ru/api/status').then(data => {\n    return data;\n  });\n};\n\n// Get boards\nexport const getBoards = () => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_BOARD\n    });\n    const res = await axios.get('/api/boards');\n    dispatch({\n      type: GET_BOARDS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get board\nexport const getBoard = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/boards/${id}`);\n    if (res) {\n      axios.defaults.headers.common['boardId'] = id;\n    } else {\n      delete axios.defaults.headers.common['boardId'];\n    }\n    dispatch({\n      type: GET_BOARD,\n      payload: {\n        ...res.data,\n        listObjects: [],\n        cardObjects: []\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add board\nexport const addBoard = (formData, history) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/boards', body, config);\n    dispatch({\n      type: ADD_BOARD,\n      payload: res.data\n    });\n    dispatch(setAlert('Board Created', 'success'));\n    history.push(`/board/${res.data._id}`);\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Rename board\nexport const renameBoard = (boardId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/boards/rename/${boardId}`, formData, config);\n    dispatch({\n      type: RENAME_BOARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get list\nexport const getList = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/lists/${id}`);\n    dispatch({\n      type: GET_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add list\nexport const addList = formData => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/lists', body, config);\n    dispatch({\n      type: ADD_LIST,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Rename list\nexport const renameList = (listId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/lists/rename/${listId}`, formData, config);\n    dispatch({\n      type: RENAME_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Archive/Unarchive list\nexport const archiveList = (listId, archive) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/lists/archive/${archive}/${listId}`);\n    dispatch({\n      type: ARCHIVE_LIST,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get card\nexport const getCard = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/task/${id}`);\n    dispatch({\n      type: GET_CARD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add card\nexport const addCard = formData => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/tasj', body, config);\n    dispatch({\n      type: ADD_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Edit card\nexport const editCard = (cardId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/task/${cardId}`, formData, config);\n    dispatch({\n      type: EDIT_CARD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Move card\nexport const moveCard = (cardId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/task/${cardId}`, body, config);\n    dispatch({\n      type: MOVE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Archive/Unarchive card\nexport const archiveCard = (cardId, archive) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/cards/archive/${archive}/${cardId}`);\n    dispatch({\n      type: ARCHIVE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete card\nexport const deleteCard = (listId, cardId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\n    dispatch({\n      type: DELETE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get activity\nexport const getActivity = () => async dispatch => {\n  try {\n    const boardId = axios.defaults.headers.common['boardId'];\n    const res = await axios.get(`/api/boards/activity/${boardId}`);\n    dispatch({\n      type: GET_ACTIVITY,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add member\nexport const addMember = userId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/boards/addMember/${userId}`);\n    dispatch({\n      type: ADD_MEMBER,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Move list\nexport const moveList = (listId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/lists/move/${listId}`, body, config);\n    dispatch({\n      type: MOVE_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add card member\nexport const addCardMember = formData => async dispatch => {\n  try {\n    const {\n      add,\n      cardId,\n      userId\n    } = formData;\n    const res = await axios.put(`/api/cards/addMember/${add}/${cardId}/${userId}`);\n    dispatch({\n      type: ADD_CARD_MEMBER,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add checklist item\nexport const addChecklistItem = (cardId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post(`/api/checklists/${cardId}`, body, config);\n    dispatch({\n      type: ADD_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Edit checklist item\nexport const editChecklistItem = (cardId, itemId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/checklists/${cardId}/${itemId}`, body, config);\n    dispatch({\n      type: EDIT_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Complete/Uncomplete checklist item\nexport const completeChecklistItem = formData => async dispatch => {\n  try {\n    const {\n      cardId,\n      complete,\n      itemId\n    } = formData;\n    const res = await axios.patch(`/api/checklists/${cardId}/${complete}/${itemId}`);\n    dispatch({\n      type: COMPLETE_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete checklist item\nexport const deleteChecklistItem = (cardId, itemId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/checklists/${cardId}/${itemId}`);\n    dispatch({\n      type: DELETE_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","CLEAR_BOARD","GET_BOARDS","GET_BOARD","ADD_BOARD","BOARD_ERROR","RENAME_BOARD","GET_LIST","ADD_LIST","RENAME_LIST","ARCHIVE_LIST","GET_CARD","ADD_CARD","EDIT_CARD","MOVE_CARD","ARCHIVE_CARD","DELETE_CARD","GET_ACTIVITY","ADD_MEMBER","MOVE_LIST","ADD_CARD_MEMBER","ADD_CHECKLIST_ITEM","EDIT_CHECKLIST_ITEM","COMPLETE_CHECKLIST_ITEM","DELETE_CHECKLIST_ITEM","config","headers","getTasks","get","then","data","getStatuses","getBoards","dispatch","type","res","payload","err","msg","response","statusText","status","getBoard","id","defaults","common","listObjects","cardObjects","addBoard","formData","history","body","JSON","stringify","post","push","_id","renameBoard","boardId","patch","getActivity","getList","addList","renameList","listId","archiveList","archive","getCard","addCard","editCard","cardId","moveCard","archiveCard","deleteCard","delete","addMember","userId","put","moveList","addCardMember","add","addChecklistItem","editChecklistItem","itemId","completeChecklistItem","complete","deleteChecklistItem"],"sources":["C:/Users/XreFullx/Desktop/TrelloClone2/client/src/actions/board.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  CLEAR_BOARD,\r\n  GET_BOARDS,\r\n  GET_BOARD,\r\n  ADD_BOARD,\r\n  BOARD_ERROR,\r\n  RENAME_BOARD,\r\n  GET_LIST,\r\n  ADD_LIST,\r\n  RENAME_LIST,\r\n  ARCHIVE_LIST,\r\n  GET_CARD,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  MOVE_CARD,\r\n  ARCHIVE_CARD,\r\n  DELETE_CARD,\r\n  GET_ACTIVITY,\r\n  ADD_MEMBER,\r\n  MOVE_LIST,\r\n  ADD_CARD_MEMBER,\r\n  ADD_CHECKLIST_ITEM,\r\n  EDIT_CHECKLIST_ITEM,\r\n  COMPLETE_CHECKLIST_ITEM,\r\n  DELETE_CHECKLIST_ITEM,\r\n} from './types';\r\n\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nexport const getTasks = async () => {\r\n  axios\r\n  .get('https://help-maxbonus.ru/api/status')\r\n  .then(data => {\r\n    return data;\r\n  })\r\n}\r\n\r\nexport const getStatuses = async () => {\r\n    axios\r\n    .get('https://help-maxbonus.ru/api/status')\r\n    .then(data => {\r\n      return data;\r\n  });\r\n}\r\n\r\n\r\n// Get boards\r\nexport const getBoards = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CLEAR_BOARD });\r\n\r\n    const res = await axios.get('/api/boards');\r\n\r\n    dispatch({\r\n      type: GET_BOARDS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get board\r\nexport const getBoard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/boards/${id}`);\r\n\r\n    if (res) {\r\n      axios.defaults.headers.common['boardId'] = id;\r\n    } else {\r\n      delete axios.defaults.headers.common['boardId'];\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_BOARD,\r\n      payload: { ...res.data, listObjects: [], cardObjects: [] },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add board\r\nexport const addBoard = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/boards', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Board Created', 'success'));\r\n\r\n    history.push(`/board/${res.data._id}`);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Rename board\r\nexport const renameBoard = (boardId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/boards/rename/${boardId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: RENAME_BOARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get list\r\nexport const getList = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/lists/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add list\r\nexport const addList = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/lists', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Rename list\r\nexport const renameList = (listId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/lists/rename/${listId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: RENAME_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Archive/Unarchive list\r\nexport const archiveList = (listId, archive) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/lists/archive/${archive}/${listId}`);\r\n\r\n    dispatch({\r\n      type: ARCHIVE_LIST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get card\r\nexport const getCard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/task/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_CARD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add card\r\nexport const addCard = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/tasj', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Edit card\r\nexport const editCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/task/${cardId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: EDIT_CARD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Move card\r\nexport const moveCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/task/${cardId}`, body, config);\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Archive/Unarchive card\r\nexport const archiveCard = (cardId, archive) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/cards/archive/${archive}/${cardId}`);\r\n\r\n    dispatch({\r\n      type: ARCHIVE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete card\r\nexport const deleteCard = (listId, cardId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get activity\r\nexport const getActivity = () => async (dispatch) => {\r\n  try {\r\n    const boardId = axios.defaults.headers.common['boardId'];\r\n\r\n    const res = await axios.get(`/api/boards/activity/${boardId}`);\r\n\r\n    dispatch({\r\n      type: GET_ACTIVITY,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add member\r\nexport const addMember = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/boards/addMember/${userId}`);\r\n\r\n    dispatch({\r\n      type: ADD_MEMBER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Move list\r\nexport const moveList = (listId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/lists/move/${listId}`, body, config);\r\n\r\n    dispatch({\r\n      type: MOVE_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add card member\r\nexport const addCardMember = (formData) => async (dispatch) => {\r\n  try {\r\n    const { add, cardId, userId } = formData;\r\n\r\n    const res = await axios.put(`/api/cards/addMember/${add}/${cardId}/${userId}`);\r\n\r\n    dispatch({\r\n      type: ADD_CARD_MEMBER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add checklist item\r\nexport const addChecklistItem = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post(`/api/checklists/${cardId}`, body, config);\r\n\r\n    dispatch({\r\n      type: ADD_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Edit checklist item\r\nexport const editChecklistItem = (cardId, itemId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/checklists/${cardId}/${itemId}`, body, config);\r\n\r\n    dispatch({\r\n      type: EDIT_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Complete/Uncomplete checklist item\r\nexport const completeChecklistItem = (formData) => async (dispatch) => {\r\n  try {\r\n    const { cardId, complete, itemId } = formData;\r\n\r\n    const res = await axios.patch(`/api/checklists/${cardId}/${complete}/${itemId}`);\r\n\r\n    dispatch({\r\n      type: COMPLETE_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete checklist item\r\nexport const deleteChecklistItem = (cardId, itemId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/checklists/${cardId}/${itemId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,SAAS;AAClC,SACEC,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,YAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,YAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,YAAY,EACZC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,SAAS,EACTC,eAAe,EACfC,kBAAkB,EAClBC,mBAAmB,EACnBC,uBAAuB,EACvBC,qBAAqB,QAChB,SAAS;AAEhB,MAAMC,MAAM,GAAG;EACbC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC5B,KAAK,CACJ6B,GAAG,CAAC,qCAAqC,CAAC,CAC1CC,IAAI,CAACC,IAAI,IAAI;IACZ,OAAOA,IAAI;EACb,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnChC,KAAK,CACJ6B,GAAG,CAAC,qCAAqC,CAAC,CAC1CC,IAAI,CAACC,IAAI,IAAI;IACZ,OAAOA,IAAI;EACf,CAAC,CAAC;AACJ,CAAC;;AAGD;AACA,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEjC;IAAY,CAAC,CAAC;IAE/B,MAAMkC,GAAG,GAAG,MAAMpC,KAAK,CAAC6B,GAAG,CAAC,aAAa,CAAC;IAE1CK,QAAQ,CAAC;MACPC,IAAI,EAAEhC,UAAU;MAChBkC,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAIC,EAAE,IAAK,MAAOV,QAAQ,IAAK;EAClD,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC6B,GAAG,CAAE,eAAce,EAAG,EAAC,CAAC;IAEhD,IAAIR,GAAG,EAAE;MACPpC,KAAK,CAAC6C,QAAQ,CAAClB,OAAO,CAACmB,MAAM,CAAC,SAAS,CAAC,GAAGF,EAAE;IAC/C,CAAC,MAAM;MACL,OAAO5C,KAAK,CAAC6C,QAAQ,CAAClB,OAAO,CAACmB,MAAM,CAAC,SAAS,CAAC;IACjD;IAEAZ,QAAQ,CAAC;MACPC,IAAI,EAAE/B,SAAS;MACfiC,OAAO,EAAE;QAAE,GAAGD,GAAG,CAACL,IAAI;QAAEgB,WAAW,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOV,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK,MAAOjB,QAAQ,IAAK;EACjE,IAAI;IACF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAErC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAACuD,IAAI,CAAC,aAAa,EAAEH,IAAI,EAAE1B,MAAM,CAAC;IAEzDQ,QAAQ,CAAC;MACPC,IAAI,EAAE9B,SAAS;MACfgC,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAACjC,QAAQ,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;IAE9CkD,OAAO,CAACK,IAAI,CAAE,UAASpB,GAAG,CAACL,IAAI,CAAC0B,GAAI,EAAC,CAAC;EACxC,CAAC,CAAC,OAAOnB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMgB,WAAW,GAAGA,CAACC,OAAO,EAAET,QAAQ,KAAK,MAAOhB,QAAQ,IAAK;EACpE,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,sBAAqBD,OAAQ,EAAC,EAAET,QAAQ,EAAExB,MAAM,CAAC;IAEhFQ,QAAQ,CAAC;MACPC,IAAI,EAAE5B,YAAY;MAClB8B,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMoB,OAAO,GAAIlB,EAAE,IAAK,MAAOV,QAAQ,IAAK;EACjD,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC6B,GAAG,CAAE,cAAae,EAAG,EAAC,CAAC;IAE/CV,QAAQ,CAAC;MACPC,IAAI,EAAE3B,QAAQ;MACd6B,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMqB,OAAO,GAAIb,QAAQ,IAAK,MAAOhB,QAAQ,IAAK;EACvD,IAAI;IACF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAErC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAACuD,IAAI,CAAC,YAAY,EAAEH,IAAI,EAAE1B,MAAM,CAAC;IAExDQ,QAAQ,CAAC;MACPC,IAAI,EAAE1B,QAAQ;MACd4B,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMsB,UAAU,GAAGA,CAACC,MAAM,EAAEf,QAAQ,KAAK,MAAOhB,QAAQ,IAAK;EAClE,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,qBAAoBK,MAAO,EAAC,EAAEf,QAAQ,EAAExB,MAAM,CAAC;IAE9EQ,QAAQ,CAAC;MACPC,IAAI,EAAEzB,WAAW;MACjB2B,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMwB,WAAW,GAAGA,CAACD,MAAM,EAAEE,OAAO,KAAK,MAAOjC,QAAQ,IAAK;EAClE,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,sBAAqBO,OAAQ,IAAGF,MAAO,EAAC,CAAC;IAExE/B,QAAQ,CAAC;MACPC,IAAI,EAAExB,YAAY;MAClB0B,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAM0B,OAAO,GAAIxB,EAAE,IAAK,MAAOV,QAAQ,IAAK;EACjD,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC6B,GAAG,CAAE,aAAYe,EAAG,EAAC,CAAC;IAE9CV,QAAQ,CAAC;MACPC,IAAI,EAAEvB,QAAQ;MACdyB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAM2B,OAAO,GAAInB,QAAQ,IAAK,MAAOhB,QAAQ,IAAK;EACvD,IAAI;IACF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAErC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAACuD,IAAI,CAAC,WAAW,EAAEH,IAAI,EAAE1B,MAAM,CAAC;IAEvDQ,QAAQ,CAAC;MACPC,IAAI,EAAEtB,QAAQ;MACdwB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAM4B,QAAQ,GAAGA,CAACC,MAAM,EAAErB,QAAQ,KAAK,MAAOhB,QAAQ,IAAK;EAChE,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,aAAYW,MAAO,EAAC,EAAErB,QAAQ,EAAExB,MAAM,CAAC;IAEtEQ,QAAQ,CAAC;MACPC,IAAI,EAAErB,SAAS;MACfuB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAM8B,QAAQ,GAAGA,CAACD,MAAM,EAAErB,QAAQ,KAAK,MAAOhB,QAAQ,IAAK;EAChE,IAAI;IACF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAErC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,aAAYW,MAAO,EAAC,EAAEnB,IAAI,EAAE1B,MAAM,CAAC;IAElEQ,QAAQ,CAAC;MACPC,IAAI,EAAEpB,SAAS;MACfsB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAM+B,WAAW,GAAGA,CAACF,MAAM,EAAEJ,OAAO,KAAK,MAAOjC,QAAQ,IAAK;EAClE,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,sBAAqBO,OAAQ,IAAGI,MAAO,EAAC,CAAC;IAExErC,QAAQ,CAAC;MACPC,IAAI,EAAEnB,YAAY;MAClBqB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMgC,UAAU,GAAGA,CAACT,MAAM,EAAEM,MAAM,KAAK,MAAOrC,QAAQ,IAAK;EAChE,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC2E,MAAM,CAAE,cAAaV,MAAO,IAAGM,MAAO,EAAC,CAAC;IAEhErC,QAAQ,CAAC;MACPC,IAAI,EAAElB,WAAW;MACjBoB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,WAAW,GAAGA,CAAA,KAAM,MAAO3B,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMyB,OAAO,GAAG3D,KAAK,CAAC6C,QAAQ,CAAClB,OAAO,CAACmB,MAAM,CAAC,SAAS,CAAC;IAExD,MAAMV,GAAG,GAAG,MAAMpC,KAAK,CAAC6B,GAAG,CAAE,wBAAuB8B,OAAQ,EAAC,CAAC;IAE9DzB,QAAQ,CAAC;MACPC,IAAI,EAAEjB,YAAY;MAClBmB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMkC,SAAS,GAAIC,MAAM,IAAK,MAAO3C,QAAQ,IAAK;EACvD,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC8E,GAAG,CAAE,yBAAwBD,MAAO,EAAC,CAAC;IAE9D3C,QAAQ,CAAC;MACPC,IAAI,EAAEhB,UAAU;MAChBkB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMqC,QAAQ,GAAGA,CAACd,MAAM,EAAEf,QAAQ,KAAK,MAAOhB,QAAQ,IAAK;EAChE,IAAI;IACF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAErC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,mBAAkBK,MAAO,EAAC,EAAEb,IAAI,EAAE1B,MAAM,CAAC;IAExEQ,QAAQ,CAAC;MACPC,IAAI,EAAEf,SAAS;MACfiB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMsC,aAAa,GAAI9B,QAAQ,IAAK,MAAOhB,QAAQ,IAAK;EAC7D,IAAI;IACF,MAAM;MAAE+C,GAAG;MAAEV,MAAM;MAAEM;IAAO,CAAC,GAAG3B,QAAQ;IAExC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAAC8E,GAAG,CAAE,wBAAuBG,GAAI,IAAGV,MAAO,IAAGM,MAAO,EAAC,CAAC;IAE9E3C,QAAQ,CAAC;MACPC,IAAI,EAAEd,eAAe;MACrBgB,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;IAEFG,QAAQ,CAAC2B,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOvB,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMwC,gBAAgB,GAAGA,CAACX,MAAM,EAAErB,QAAQ,KAAK,MAAOhB,QAAQ,IAAK;EACxE,IAAI;IACF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAErC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAACuD,IAAI,CAAE,mBAAkBgB,MAAO,EAAC,EAAEnB,IAAI,EAAE1B,MAAM,CAAC;IAEvEQ,QAAQ,CAAC;MACPC,IAAI,EAAEb,kBAAkB;MACxBe,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMyC,iBAAiB,GAAGA,CAACZ,MAAM,EAAEa,MAAM,EAAElC,QAAQ,KAAK,MAAOhB,QAAQ,IAAK;EACjF,IAAI;IACF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC;IAErC,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,mBAAkBW,MAAO,IAAGa,MAAO,EAAC,EAAEhC,IAAI,EAAE1B,MAAM,CAAC;IAElFQ,QAAQ,CAAC;MACPC,IAAI,EAAEZ,mBAAmB;MACzBc,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAM2C,qBAAqB,GAAInC,QAAQ,IAAK,MAAOhB,QAAQ,IAAK;EACrE,IAAI;IACF,MAAM;MAAEqC,MAAM;MAAEe,QAAQ;MAAEF;IAAO,CAAC,GAAGlC,QAAQ;IAE7C,MAAMd,GAAG,GAAG,MAAMpC,KAAK,CAAC4D,KAAK,CAAE,mBAAkBW,MAAO,IAAGe,QAAS,IAAGF,MAAO,EAAC,CAAC;IAEhFlD,QAAQ,CAAC;MACPC,IAAI,EAAEX,uBAAuB;MAC7Ba,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAM6C,mBAAmB,GAAGA,CAAChB,MAAM,EAAEa,MAAM,KAAK,MAAOlD,QAAQ,IAAK;EACzE,IAAI;IACF,MAAME,GAAG,GAAG,MAAMpC,KAAK,CAAC2E,MAAM,CAAE,mBAAkBJ,MAAO,IAAGa,MAAO,EAAC,CAAC;IAErElD,QAAQ,CAAC;MACPC,IAAI,EAAEV,qBAAqB;MAC3BY,OAAO,EAAED,GAAG,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZJ,QAAQ,CAAC;MACPC,IAAI,EAAE7B,WAAW;MACjB+B,OAAO,EAAE;QAAEE,GAAG,EAAED,GAAG,CAACE,QAAQ,CAACC,UAAU;QAAEC,MAAM,EAAEJ,GAAG,CAACE,QAAQ,CAACE;MAAO;IACvE,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module"}