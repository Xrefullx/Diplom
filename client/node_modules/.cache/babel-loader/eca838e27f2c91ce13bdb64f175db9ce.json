{"ast":null,"code":"import _classCallCheck from \"C:/Users/XreFullx/Desktop/TrelloClone2/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/XreFullx/Desktop/TrelloClone2/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var DragSourceImpl = /*#__PURE__*/function () {\n  function DragSourceImpl(spec, monitor, connector) {\n    _classCallCheck(this, DragSourceImpl);\n    this.spec = spec;\n    this.monitor = monitor;\n    this.connector = connector;\n  }\n  _createClass(DragSourceImpl, [{\n    key: \"beginDrag\",\n    value: function beginDrag() {\n      var spec = this.spec;\n      var monitor = this.monitor;\n      var result = null;\n      if (typeof spec.item === 'object') {\n        result = spec.item;\n      } else if (typeof spec.item === 'function') {\n        result = spec.item(monitor);\n      } else {\n        result = {};\n      }\n      return result !== null && result !== void 0 ? result : null;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      var spec = this.spec;\n      var monitor = this.monitor;\n      if (typeof spec.canDrag === 'boolean') {\n        return spec.canDrag;\n      } else if (typeof spec.canDrag === 'function') {\n        return spec.canDrag(monitor);\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging(globalMonitor, target) {\n      var spec = this.spec;\n      var monitor = this.monitor;\n      var isDragging = spec.isDragging;\n      return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();\n    }\n  }, {\n    key: \"endDrag\",\n    value: function endDrag() {\n      var spec = this.spec;\n      var monitor = this.monitor;\n      var connector = this.connector;\n      var end = spec.end;\n      if (end) {\n        end(monitor.getItem(), monitor);\n      }\n      connector.reconnect();\n    }\n  }]);\n  return DragSourceImpl;\n}();","map":{"version":3,"sources":["../../../src/hooks/useDrag/DragSourceImpl.ts"],"names":["DragSourceImpl","spec","monitor","connector","beginDrag","result","item","canDrag","isDragging","globalMonitor","target","getSourceId","endDrag","end","getItem","reconnect"],"mappings":";;AAMA,WAAaA,cAAc;EAC1B,SAAA,eACQC,IAAiC,EAChCC,OAAgC,EAChCC,SAAoB,EAC3B;IAAA,eAAA,OAAA,cAAA;SAHMF,IAAiC,GAAjCA,IAAiC;SAChCC,OAAgC,GAAhCA,OAAgC;SAChCC,SAAoB,GAApBA,SAAoB;;EACzB,YAAA,CAAA,cAAA;IAAA,GAAA;IAAA,KAAA,EAEGC,SAAAA,UAAAA,EAAY;MAClB,IAAMH,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;MAE5B,IAAIG,MAAM,GAAa,IAAI;MAC3B,IAAI,OAAOJ,IAAI,CAACK,IAAI,KAAK,QAAQ,EAAE;QAClCD,MAAM,GAAGJ,IAAI,CAACK,IAAS;OACvB,MAAM,IAAI,OAAOL,IAAI,CAACK,IAAI,KAAK,UAAU,EAAE;QAC3CD,MAAM,GAAIJ,IAAI,CAACK,IAAI,CAA0BJ,OAAO,CAAC;OACrD,MAAM;QACNG,MAAM,GAAG,CAAA,CAAO;MAChB;MACD,OAAOA,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAANA,MAAM,GAAI,IAAI;;EACrB;IAAA,GAAA;IAAA,KAAA,EAEME,SAAAA,QAAAA,EAAU;MAChB,IAAMN,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAI,OAAOD,IAAI,CAACM,OAAO,KAAK,SAAS,EAAE;QACtC,OAAON,IAAI,CAACM,OAAO;OACnB,MAAM,IAAI,OAAON,IAAI,CAACM,OAAO,KAAK,UAAU,EAAE;QAC9C,OAAON,IAAI,CAACM,OAAO,CAACL,OAAO,CAAC;OAC5B,MAAM;QACN,OAAO,IAAI;MACX;;EACD;IAAA,GAAA;IAAA,KAAA,EAEMM,SAAAA,WAAWC,aAA8B,EAAEC,MAAkB,EAAE;MACrE,IAAMT,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAQM,UAAU,GAAKP,IAAI,CAAnBO,UAAU;MAClB,OAAOA,UAAU,GACdA,UAAU,CAACN,OAAO,CAAC,GACnBQ,MAAM,KAAKD,aAAa,CAACE,WAAW,CAAA,CAAE;;EACzC;IAAA,GAAA;IAAA,KAAA,EAEMC,SAAAA,QAAAA,EAAU;MAChB,IAAMX,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAMC,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAQU,GAAG,GAAKZ,IAAI,CAAZY,GAAG;MACX,IAAIA,GAAG,EAAE;QACRA,GAAG,CAACX,OAAO,CAACY,OAAO,CAAA,CAAE,EAAEZ,OAAO,CAAC;MAC/B;MACDC,SAAS,CAACY,SAAS,CAAA,CAAE;;EACrB;EAAA,OAAA,cAAA;AAAA","sourcesContent":["import type { DragDropMonitor, DragSource, Identifier } from 'dnd-core'\n\nimport type { Connector } from '../../internals/index.js'\nimport type { DragSourceMonitor } from '../../types/index.js'\nimport type { DragObjectFactory, DragSourceHookSpec } from '../types.js'\n\nexport class DragSourceImpl<O, R, P> implements DragSource {\n\tpublic constructor(\n\t\tpublic spec: DragSourceHookSpec<O, R, P>,\n\t\tprivate monitor: DragSourceMonitor<O, R>,\n\t\tprivate connector: Connector,\n\t) {}\n\n\tpublic beginDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\n\t\tlet result: O | null = null\n\t\tif (typeof spec.item === 'object') {\n\t\t\tresult = spec.item as O\n\t\t} else if (typeof spec.item === 'function') {\n\t\t\tresult = (spec.item as DragObjectFactory<O>)(monitor)\n\t\t} else {\n\t\t\tresult = {} as O\n\t\t}\n\t\treturn result ?? null\n\t}\n\n\tpublic canDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tif (typeof spec.canDrag === 'boolean') {\n\t\t\treturn spec.canDrag\n\t\t} else if (typeof spec.canDrag === 'function') {\n\t\t\treturn spec.canDrag(monitor)\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tpublic isDragging(globalMonitor: DragDropMonitor, target: Identifier) {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst { isDragging } = spec\n\t\treturn isDragging\n\t\t\t? isDragging(monitor)\n\t\t\t: target === globalMonitor.getSourceId()\n\t}\n\n\tpublic endDrag() {\n\t\tconst spec = this.spec\n\t\tconst monitor = this.monitor\n\t\tconst connector = this.connector\n\t\tconst { end } = spec\n\t\tif (end) {\n\t\t\tend(monitor.getItem(), monitor)\n\t\t}\n\t\tconnector.reconnect()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}