{"ast":null,"code":"import { union, without } from './utils/js_utils.js';\nexport class EnterLeaveCounter {\n  enter(enteringNode) {\n    const previousLength = this.entered.length;\n    const isNodeEntered = node => this.isNodeInDocument(node) && (!node.contains || node.contains(enteringNode));\n    this.entered = union(this.entered.filter(isNodeEntered), [enteringNode]);\n    return previousLength === 0 && this.entered.length > 0;\n  }\n  leave(leavingNode) {\n    const previousLength = this.entered.length;\n    this.entered = without(this.entered.filter(this.isNodeInDocument), leavingNode);\n    return previousLength > 0 && this.entered.length === 0;\n  }\n  reset() {\n    this.entered = [];\n  }\n  constructor(isNodeInDocument) {\n    this.entered = [];\n    this.isNodeInDocument = isNodeInDocument;\n  }\n}","map":{"version":3,"sources":["../src/EnterLeaveCounter.ts"],"names":["union","without","EnterLeaveCounter","entered","isNodeInDocument","enter","enteringNode","previousLength","length","isNodeEntered","node","contains","filter","leave","leavingNode","reset"],"mappings":"AAAA,SAASA,KAAK,EAAEC,OAAO,QAAQ,qBAAqB;AAIpD,OAAO,MAAMC,iBAAiB,CAAA;EAQtBG,KAAK,CAACC,YAAgC,EAAW;IACvD,MAAMC,cAAc,GAAG,IAAI,CAACJ,OAAO,CAACK,MAAM;IAE1C,MAAMC,aAAa,GAAIC,IAAU,IAChC,IAAI,CAACN,gBAAgB,CAACM,IAAI,CAAC,KAC1B,CAACA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACC,QAAQ,CAACL,YAAY,CAAS,CAAC;IAExD,IAAI,CAACH,OAAO,GAAGH,KAAK,CAAC,IAAI,CAACG,OAAO,CAACS,MAAM,CAACH,aAAa,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;IAExE,OAAOC,cAAc,KAAK,CAAC,IAAI,IAAI,CAACJ,OAAO,CAACK,MAAM,GAAG,CAAC;EACtD;EAEMK,KAAK,CAACC,WAA+B,EAAW;IACtD,MAAMP,cAAc,GAAG,IAAI,CAACJ,OAAO,CAACK,MAAM;IAE1C,IAAI,CAACL,OAAO,GAAGF,OAAO,CACrB,IAAI,CAACE,OAAO,CAACS,MAAM,CAAC,IAAI,CAACR,gBAAgB,CAAC,EAC1CU,WAAW,CACX;IAED,OAAOP,cAAc,GAAG,CAAC,IAAI,IAAI,CAACJ,OAAO,CAACK,MAAM,KAAK,CAAC;EACtD;EAEMO,KAAK,CAAA,EAAS;IACpB,IAAI,CAACZ,OAAO,GAAG,EAAE;EACjB;EA7BD,WAAA,CAAmBC,gBAA+B,EAAE;IAHpD,IAAA,CAAQD,OAAO,GAAU,EAAE;IAI1B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;EACxC;AA4BD","sourcesContent":["import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}